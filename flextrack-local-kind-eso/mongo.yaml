apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-statefulset
  labels:
    app: mongo
  annotations:
    reloader.stakater.com/auto: "true"  # Auto-restart when any secret/configmap changes
    # OR use specific secret monitoring:
    # secret.reloader.stakater.com/reload: "mongodb-secret"
spec:
  serviceName: mongo-headless
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo-container
        image: mongo:latest
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret # name of the k8s secret created by external-secrets
              key: user # key in the k8s secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: password
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: database
        command:
            - mongod
            - "--bind_ip_all"
            - --config=/etc/mongo/mongodb.conf
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db  # Standard MongoDB data path
        - name: mongodb-config
          mountPath: /etc/mongo
      volumes:
        - name: mongodb-config
          configMap:
            name: mongodb-config
            items:
              - key: mongodb.conf # key in the ConfigMap
                path: mongodb.conf # file name inside the container
  volumeClaimTemplates:
  - metadata:
      name: mongo-data
      labels:
        app: mongo
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: standard # adjust based on your k8s setup
      resources:
        requests:
          storage: 2Gi  # Adjust size as needed
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-headless
  labels:
    app: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
    name: mongodb
  clusterIP: None  # Headless service
  selector:
    app: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-database
spec:
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongo
---